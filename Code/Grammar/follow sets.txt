<program> ===> {$}
<mainFunction> ===> {$}
<otherFunctions> ===> {TK_MAIN}
<function> ===> {TK_MAIN, TK_FUNID}
<input_par> ===> {TK_OUTPUT, TK_SEM}
<output_par> ===> {TK_SEM}
<parameter_list> ===> {TK_SQR}
<dataType> ===> {TK_ID, TK_COLON}
<primitiveDatatype> ===> {TK_ID, TK_COLON}
<constructedDatatype> ===> {TK_ID, TK_COLON}
<remaining_list> ===> {TK_SQR}
<stmts> ===> {TK_END}
<typeDefinitions> ===> {TK_TYPE, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN}
<typeDefinition> ===> {TK_RECORD, TK_TYPE, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN}
<fieldDefinitions> ===> {TK_ENDRECORD}
<fieldDefinition> ===> {TK_TYPE, TK_ENDRECORD}
<moreFields> ===> {TK_ENDRECORD}
<declarations> ===> {TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN}
<declaration> ===> {TK_TYPE, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL, TK_RETURN}
<global_or_not> ===> {TK_SEM}
<otherStmts> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF}
<stmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<assignmentStmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<singleOrRecId> ===> {TK_ASSIGNOP}
<funCallStmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<outputParameters> ===> {TK_CALL}
<inputParameters> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<iterativeStmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<conditionalStmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<conditionalSuffix> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<ioStmt> ===> {TK_RETURN, TK_ENDWHILE, TK_ELSE, TK_ENDIF, TK_ID, TK_RECORDID, TK_WHILE, TK_IF, TK_READ, TK_WRITE, TK_SQL, TK_CALL}
<allVar> ===> {TK_CL}
<arithmeticExpression> ===> {TK_CL, TK_SEM}
<arithmeticE1> ===> {TK_CL, TK_SEM}
<arithmeticT> ===> {TK_PLUS, TK_MINUS, TK_CL, TK_SEM}
<arithmeticT1> ===> {TK_PLUS, TK_MINUS, TK_CL, TK_SEM}
<arithmeticF> ===> {TK_MUL, TK_DIV, TK_PLUS, TK_MINUS, TK_CL, TK_SEM}
<operator_plusMinus> ===> {TK_OP, TK_ID, TK_NUM, TK_RNUM}
<operator_mulDiv> ===> {TK_OP, TK_ID, TK_NUM, TK_RNUM}
<booleanExpression> ===> {TK_CL, TK_THEN}
<var> ===> {TK_LT, TK_LE, TK_EQ, TK_GT, TK_GE, TK_NE, TK_CL, TK_THEN, TK_PLUS, TK_MUL, TK_MINUS, TK_DIV, TK_SEM}
<logicalOp> ===> {TK_OP}
<relationalOp> ===> {TK_ID, TK_NUM, TK_RNUM}
<returnStmt> ===> {TK_END}
<optionalReturn> ===> {TK_SEM}
<idList> ===> {TK_SQR}
<more_ids> ===> {TK_SQR}