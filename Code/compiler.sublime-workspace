{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rh",
				"rhs_occ_cnt"
			],
			[
				"OPE",
				"OPERATORMULDIV"
			],
			[
				"OP",
				"OPERATORMULDIV"
			],
			[
				"A",
				"ARITHMETICT"
			],
			[
				"pa",
				"parserSets"
			],
			[
				"set",
				"setAdd"
			],
			[
				"rule",
				"rulelist"
			],
			[
				"pr",
				"prod_rules"
			],
			[
				"rul",
				"rulelist"
			],
			[
				"pro",
				"prodRuleNode"
			],
			[
				"MO",
				"MOREIDS"
			],
			[
				"str",
				"strcpy"
			],
			[
				"get",
				"getNonTerminalStr"
			],
			[
				"prod",
				"prod_rule_idx"
			],
			[
				"r",
				"rulelist"
			],
			[
				"NU",
				"NUM_NONTERMINALS"
			],
			[
				"NO",
				"NONTERMINAL"
			],
			[
				"ar",
				"arithmeticExpression"
			],
			[
				"NON",
				"NONTERMINAL_OFFSET"
			],
			[
				"TE",
				"TERMINAL_OFFSET"
			],
			[
				"min",
				"min_without_green"
			],
			[
				"print",
				"printTree"
			],
			[
				"pri",
				"printTree"
			],
			[
				"wit",
				"without_green"
			],
			[
				"with",
				"with_green"
			],
			[
				"creat",
				"createEmptyNode"
			],
			[
				"wi",
				"without_green"
			],
			[
				"color",
				"colorVect"
			],
			[
				"rgb",
				"rgb_mean"
			],
			[
				"col",
				"colorVect"
			],
			[
				"merge",
				"mergeConnected"
			],
			[
				"def",
				"default"
			],
			[
				"arg",
				"argc"
			],
			[
				"coa",
				"coalesce_ratio"
			],
			[
				"opt",
				"optarg"
			],
			[
				"seg",
				"seg_graph"
			],
			[
				"I",
				"IplImage"
			],
			[
				"sig",
				"sigma_percent"
			],
			[
				"cv",
				"cvGetTrackbarPos"
			],
			[
				"mi",
				"min_comp_size"
			],
			[
				"di",
				"dijkstra"
			],
			[
				"login",
				"login_url〔variable〕"
			],
			[
				"is",
				"isCycleUtil"
			],
			[
				"isA",
				"isATreeDFSUtil"
			],
			[
				"re",
				"return"
			],
			[
				"right",
				"rightRotate"
			],
			[
				"left",
				"leftRotate"
			],
			[
				"de",
				"deleteMin"
			],
			[
				"ins",
				"insertHeap"
			],
			[
				"heap",
				"heapify"
			],
			[
				"hea",
				"heapify"
			],
			[
				"find",
				"findMax"
			],
			[
				"search",
				"searchhelper"
			],
			[
				"x",
				"xInputFilex	INPUT_FILE ..."
			],
			[
				"B",
				"BUFSIZE"
			],
			[
				"t",
				"time_steps"
			],
			[
				"g",
				"gest_no"
			],
			[
				"ges",
				"gestureName"
			],
			[
				"ge",
				"gestCount"
			],
			[
				"gest",
				"gest_no"
			],
			[
				"blo",
				"blob_a"
			],
			[
				"cvCreat",
				"cvCreateImage"
			],
			[
				"sh",
				"shmid"
			],
			[
				"shm",
				"shm_id"
			],
			[
				"si",
				"signo"
			],
			[
				"in",
				"int_handler"
			],
			[
				"al",
				"alrm_handler"
			],
			[
				"dist",
				"dist_tree"
			],
			[
				"max",
				"maxDiff"
			],
			[
				"isDe",
				"isDecreasing"
			],
			[
				"su",
				"sumDifficulty"
			],
			[
				"isI",
				"isInc"
			],
			[
				"isIn",
				"isIncreasing"
			],
			[
				"sum",
				"sumDiff"
			],
			[
				"l",
				"lmaxDiff"
			],
			[
				"ind",
				"index2"
			],
			[
				"idne",
				"index1"
			],
			[
				"inde",
				"index"
			],
			[
				"ma",
				"maxDiff"
			],
			[
				"en",
				"environ"
			],
			[
				"grp",
				"grpid"
			],
			[
				"fo",
				"forkid"
			],
			[
				"ch",
				"childpid"
			],
			[
				"file",
				"filedes"
			],
			[
				"par",
				"parseChar"
			],
			[
				"read",
				"readLine"
			],
			[
				"va",
				"va_arg"
			],
			[
				"b",
				"buf"
			],
			[
				"f",
				"filedes"
			],
			[
				"cl",
				"close"
			],
			[
				"st",
				"stderr"
			],
			[
				"dest",
				"dest_filename"
			],
			[
				"STD",
				"STDERR_FILENO"
			],
			[
				"ST",
				"STDOUT_FILENO"
			],
			[
				"wr",
				"wrfd"
			],
			[
				"co",
				"cost_matrix〔variable〕"
			],
			[
				"temp",
				"temp2"
			],
			[
				"tem",
				"temp1"
			],
			[
				"dp_sma",
				"dp_smart_even"
			],
			[
				"cap",
				"capacity"
			],
			[
				"wei",
				"weights"
			],
			[
				"bolt",
				"bolts_right"
			],
			[
				"nuts",
				"nuts_right"
			],
			[
				"nut",
				"nuts_left"
			],
			[
				"no",
				"no_dep_issues〔variable〕"
			],
			[
				"ve",
				"vect_output〔variable〕"
			],
			[
				"out",
				"output_file_path〔variable〕"
			],
			[
				"se",
				"setCrs"
			],
			[
				"hull",
				"hull_layer〔variable〕"
			],
			[
				"hul",
				"hull_file_output〔variable〕"
			],
			[
				"o",
				"output_file_path〔variable〕"
			],
			[
				"output",
				"output_text〔variable〕"
			],
			[
				"clo",
				"closest_list〔variable〕"
			],
			[
				"clos",
				"closest_idx_list〔variable〕"
			],
			[
				"thr",
				"thresh_state〔variable〕"
			],
			[
				"togg",
				"toggleThreshBox"
			],
			[
				"thre",
				"thresh_state"
			],
			[
				"the",
				"thresh"
			],
			[
				"idS",
				"idStop〔variable〕"
			],
			[
				"sele",
				"selected_point〔variable〕"
			],
			[
				"point",
				"point_list〔variable〕"
			],
			[
				"to_",
				"to_point_filepath〔variable〕"
			],
			[
				"poin",
				"point_layer_names〔variable〕"
			],
			[
				"poi",
				"point_layer_names〔variable〕"
			],
			[
				"add",
				"addItems"
			],
			[
				"line",
				"line_layer_names〔variable〕"
			],
			[
				"setC",
				"setCrs"
			],
			[
				"Qgs",
				"QgsFeature"
			]
		]
	},
	"buffers":
	[
		{
			"file": "mod_grammar.txt",
			"settings":
			{
				"buffer_size": 3626,
				"line_ending": "Unix"
			}
		},
		{
			"file": "notes.txt",
			"settings":
			{
				"buffer_size": 615,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parserDef.h",
			"settings":
			{
				"buffer_size": 2479,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parserUtils.h",
			"settings":
			{
				"buffer_size": 925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "set.h",
			"settings":
			{
				"buffer_size": 702,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parserSets.h",
			"settings":
			{
				"buffer_size": 678,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parserUtils.c",
			"settings":
			{
				"buffer_size": 17943,
				"line_ending": "Unix"
			}
		},
		{
			"file": "set.c",
			"settings":
			{
				"buffer_size": 1281,
				"line_ending": "Unix"
			}
		},
		{
			"file": "parserSets.c",
			"settings":
			{
				"buffer_size": 2273,
				"line_ending": "Unix"
			}
		},
		{
			"file": "run.c",
			"settings":
			{
				"buffer_size": 983,
				"line_ending": "Unix"
			}
		},
		{
			"file": "makefile",
			"settings":
			{
				"buffer_size": 1111,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				"Run"
			]
		],
		[
			[
				[
					"Packages/Makefile/Make.sublime-build",
					""
				],
				[
					"Packages/Makefile/Make.sublime-build",
					"Clean"
				]
			],
			[
				"Packages/Makefile/Make.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 375.0,
		"last_filter": "package",
		"selected_items":
		[
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"disabl",
				"Package Control: Disable Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			]
		],
		"width": 553.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/Users/pkar/Development/CBIR/Clustering/hog.py",
		"/Users/pkar/Library/Application Support/Sublime Text 3/Packages/FileHeader/template/header/Python.tmpl",
		"/Users/pkar/Library/Application Support/Sublime Text 3/Packages/FileHeader/FileHeader.sublime-settings",
		"/Users/pkar/Library/Application Support/Sublime Text 3/Packages/FileHeader/template/header/C.tmpl",
		"/Users/pkar/Library/Application Support/Sublime Text 3/Packages/FileHeader/template/header/C++.tmpl",
		"/Users/pkar/Documents/Compiler/Code/test.py",
		"/Users/pkar/Documents/Compiler/Code/parserDef.h",
		"/Users/pkar/Documents/Compiler/Code/first.txt",
		"/Users/pkar/Downloads/first sets.htm",
		"/Users/pkar/Documents/Compiler/Code/orig_grammar.txt",
		"/Users/pkar/Downloads/follow sets.htm",
		"/Users/pkar/Documents/Compiler/Code/follow sets.txt",
		"/Users/pkar/Downloads/rules.grammar",
		"/Users/pkar/Documents/Compiler/Code/parsed_grammar.txt",
		"/Users/pkar/Documents/Compiler/Code/terminals.txt",
		"/Users/pkar/Documents/Compiler/Code/nonterminals.txt",
		"/Users/pkar/Documents/Compiler/Code/regex.py",
		"/Users/pkar/Development/CBIR/Clustering/imageClassifier.py",
		"/Users/pkar/Development/codebase/spoj/THREECOL.txt",
		"/Users/pkar/Development/codebase/spoj/THREECOL.cpp",
		"/Users/pkar/Downloads/InstaEDU/DTree/C4.5-Homework/spam/raw/5526.2005-07-01.BG.spam.txt",
		"/Users/pkar/Development/Image-Classification-Using-SVM/libsvm-3.21/tools/grid.py",
		"/Users/pkar/Development/Image-Classification-Using-SVM/src/imageClassifier.py",
		"/Users/pkar/Downloads/Ncut_9/quadedgep.m",
		"/Users/pkar/Development/codebase/DSA/Lab 3/main.c",
		"/Users/pkar/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/usr/include/wchar.h",
		"/usr/local/include/opencv2/core/types_c.h",
		"/usr/include/stdarg.h",
		"/Users/pkar/Downloads/region_2006.m",
		"/Users/pkar/Downloads/DTree/C4.5-Homework/data.py",
		"/Users/pkar/Downloads/DTree/C4.5-Homework/README.md",
		"/Users/pkar/Downloads/DTree/C4.5-Homework/test.py",
		"/Users/pkar/Downloads/DTree/C4.5-Homework/tree.py",
		"/Users/pkar/Downloads/DTree/234d1e8f8a004ffe743d84b5a2159f0b_1b1750083921bcf37fe12fb937dc17d1.md",
		"/Users/pkar/Downloads/submission_762088670588561.txt",
		"/Users/pkar/Downloads/submission_1664299653847295.txt",
		"/Users/pkar/Development/Shakespeer/Makefile",
		"/Users/pkar/Downloads/smap-1.6.3/segment/example3/params",
		"/Users/pkar/Downloads/smap-1.6.3/segment/example3/data1",
		"/Users/pkar/Downloads/smap-1.6.3/segment/example3/GetRegion.m",
		"/Users/pkar/Downloads/smap-1.6.3/segment/README",
		"/Users/pkar/Downloads/smap-1.6.3/README",
		"/Users/pkar/Downloads/HMRF-EM-image_v2.1/HMRF-EM-image_v2.1/code/BoundMirrorExpand.cpp",
		"/Users/pkar/Downloads/HMRF-EM-image_v2.1/HMRF-EM-image_v2.1/code/demo.m",
		"/Users/pkar/Downloads/HMRF-EM-image_v2.1/HMRF-EM-image_v2.1/code/image_kmeans.m",
		"/Users/pkar/Downloads/segapp/GNUmakefile",
		"/Users/pkar/Downloads/segapp/README",
		"/Users/pkar/Downloads/segapp/SegmentApp.java",
		"/Users/pkar/Downloads/segapp/CreateEmptySeg.java",
		"/Users/pkar/Development/CBIR/Segmentation/makefile",
		"/Users/pkar/Downloads/objectLabelingTool/objectLabelingTool.m",
		"/Users/pkar/Downloads/objectLabelingTool/objectLabelingScript.m",
		"/Users/pkar/Development/CBIR/README.md",
		"/Users/pkar/Development/CBIR/Segmentation/segment-image.h",
		"/Users/pkar/Development/CBIR/Segmentation/run.cpp",
		"/Users/pkar/Development/CBIR/Segmentation/segment.cpp",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/Makefile",
		"/Users/pkar/Development/CBIR/Segmentation/Makefile",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/convolve.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/README",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/disjoint-set.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/filter.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/image.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/imconv.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/imutil.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/misc.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/pnmfile.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/segment-graph.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/segment-image.h",
		"/Users/pkar/Development/CBIR/Segmentation/Graph Based/segment.cpp",
		"/Users/pkar/Development/CBIR/Segmentation/segment-graph.h",
		"/Users/pkar/Documents/MATLAB/PDELTA/pdelta_himalayas.m",
		"/Users/pkar/Development/CBIR/Segmentation/kmeans.m",
		"/Users/pkar/Development/vision/lut/lut_maker.cpp",
		"/Users/pkar/Development/vision/goalpost_detection/goal_detect_image.cpp",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/1.cpp",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/2.cpp",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/input2.txt",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/output2.txt",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/input1.txt",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/output1.txt",
		"/Users/pkar/Downloads/segment/README",
		"/Users/pkar/Downloads/boomerang_constellations.txt",
		"/Users/pkar/Downloads/the_price_is_correct.txt",
		"/Users/pkar/Development/codebase/random/Facebook Hacker Cup 2016 Qualification Round/The Price is Correct.cpp",
		"/Users/pkar/Development/codebase/practice/output.txt",
		"/Users/pkar/Development/codebase/practice/input.txt",
		"/Users/pkar/Development/codebase/practice/run.cpp",
		"/Users/pkar/Development/codebase/spoj/SAMER08D.cpp",
		"/Users/pkar/Development/codebase/spoj/NICEBTRE.cpp",
		"/Users/pkar/Development/codebase/practice/Graphs/dijkstra.cpp",
		"/Users/pkar/Development/codebase/practice/Heaps/mergeksort.cpp",
		"/Users/pkar/Development/codebase/practice/Heaps/heap.cpp",
		"/Users/pkar/Development/codebase/practice/Trees/avl.cpp",
		"/Users/pkar/Development/codebase/practice/Trees/lca.cpp",
		"/Users/pkar/Development/codebase/spoj/LCA.cpp",
		"/Users/pkar/Development/codebase/spoj/LCA.txt",
		"/Users/pkar/Development/codebase/spoj/NICEBTRE.txt",
		"/Users/pkar/Development/codebase/spoj/TREEORD.txt",
		"/Users/pkar/Development/codebase/spoj/TREEORD.cpp",
		"/Users/pkar/Development/codebase/spoj/GSS4.cpp",
		"/Users/pkar/Development/codebase/spoj/NICECTRE.cpp",
		"/Users/pkar/Development/codebase/LeetCode/leetcodeSubmissionDownload/leetcode.py",
		"/Users/pkar/Development/codebase/LeetCode/chinkileetcode/grab_solutions.py",
		"/Users/pkar/Development/codebase/LeetCode/leetcodeSubmissionDownload/README.md",
		"/Users/pkar/Development/codebase/LeetCode/grab_solutions.py",
		"/Users/pkar/Development/codebase/hackerrank/Ashton and String/run.cpp",
		"/Users/pkar/Desktop/libpcre.pc",
		"/Users/pkar/Development/codebase/practice/Graphs/checkCycle.cpp",
		"/Users/pkar/Development/codebase/spoj/PT07Y.txt",
		"/Users/pkar/Development/codebase/spoj/PT07Y.cpp",
		"/Users/pkar/Development/codeTest/Data Structures/AVL Trees/avl.txt",
		"/Users/pkar/Development/codeTest/Data Structures/AVL Trees/avl.cpp",
		"/Users/pkar/Downloads/bfg-repo-cleaner-1.12.8/README.md",
		"/Users/pkar/Downloads/bfg-repo-cleaner-1.12.8/BUILD.md",
		"/Users/pkar/Development/codebase/CV/layaureo.sty",
		"/Users/pkar/Development/codebase/CV/CV.tex",
		"/Users/pkar/Development/codebase/CV/CV-Preamble.tex",
		"/Users/pkar/Downloads/Professional CV/cv.tex",
		"/Users/pkar/Development/codebase/CV/cv.tex",
		"/Users/pkar/Downloads/url.txt",
		"/Users/pkar/Development/codebase/practice/Trees/makefile",
		"/Users/pkar/Library/Application Support/Unified Remote/Remotes/Bundled/EyeTV/layout.xml",
		"/Users/pkar/Library/Application Support/Unified Remote/Remotes/Bundled/EyeTV/meta.prop",
		"/Users/pkar/Library/Application Support/Unified Remote/Remotes/Bundled/EyeTV/remote.lua",
		"/Applications/Unified Remote.app/Contents/Resources/Remotes/Bundled/Beamer/Beamer/remote_osx.lua",
		"/Users/pkar/Library/Application Support/Unified Remote/Remotes/Custom/ShakesPeer/layout.xml"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			"/Users/pkar/Development/CBIR/Segmentation/Graph Based",
			"/Users/pkar/Development/codebase/CV",
			"/Users/pkar/Documents/MATLAB/PDELTA",
			"/Users/pkar/Documents/MATLAB",
			"/Users/pkar/Development/QGIS",
			"/Applications/GRASS-6.4.app/Contents/MacOS/docs/html",
			"/Users/pkar/.qgis2/python/plugins/SpatialDT",
			"/Users/pkar/Development/QGIS/src",
			"/Users/pkar/Development/QGIS/src/plugins/roadgraph",
			"/Users/pkar/Downloads/OGDF-snapshot/include/ogdf"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"@echo Done",
			"gcc",
			"->",
			"===>",
			"^[[<][.]*[>]]",
			"TK_EPS",
			"inputpar",
			"SINGLEORRECID",
			"idli",
			"line",
			"node",
			"parserDef",
			"if(ntid",
			",",
			"prod_rule_ptr",
			"productionRule",
			"_productionRule",
			"productionRule",
			"productionRuleNode",
			"productionRule",
			"return T",
			"RETURN ",
			"return ",
			"return",
			"RETURN",
			"return",
			"strcmp(str, \"",
			"== 0",
			"strcmp(str, \"",
			"if(strcmp",
			"eps",
			"node",
			"Node",
			"node",
			"TK_IF <booleanExpression> TK_THEN <stmt> <otherStmts> ",
			"TK_IF <booleanExpression> TK_THEN <stmt> <otherStmts>",
			"strcmp",
			"if(strcmp(",
			"return \"",
			"RETURN",
			"return",
			"RETURN",
			"return",
			"\".*\"",
			"if(strcmp(",
			"===>",
			"max",
			"dpmax",
			"max_without_green",
			"max_with_green",
			"max",
			"without_green",
			"with_green",
			"printTree",
			"push",
			". <",
			"region_grow1",
			"height()",
			"width()",
			"frame.",
			"mat",
			"[0]",
			".r",
			"CV_WINDOW_AUTOSIZE",
			"main",
			"double",
			"COALESCE_RATIO",
			"temp",
			"surr",
			"int a = u->find(elem);\n        int b = u->find(surr);\n        if(u->size(a) > u->size(b))\n          swap(a, b);\n        if(a != b && (double) u->size(a) < (double) (u->size(b) * COALESCE_RATIO))\n          u->join(a, b);",
			"COALESCE_PERC",
			"if(a != b && u->size(a) < (u->size(b) * COALESCE_PERC))",
			"int a = u->find(elem);\n        int b = u->find(elem);",
			"RED_WEIGHT",
			"seg_graph",
			"30",
			"cvShowImage",
			"update, frame",
			";\n",
			"ptr[j][i]",
			"ptr[i][j]",
			"rgb",
			"	",
			"2",
			"author",
			"isATreeDFSUtil",
			"]",
			"[\"",
			"\", \"",
			"Rotate",
			"temp",
			"df32ff",
			"rightRotate",
			"leftRotate",
			"9",
			"root",
			"Rotate",
			"root",
			"a->",
			"a",
			"vector<int> &heap",
			"fmtcount",
			"fmt",
			",",
			"(*root)",
			"*root",
			"breakfast",
			"keyboard.text",
			"stroke",
			"breakfast",
			"tab",
			"cancel",
			"search",
			"launch",
			"destination",
			" ",
			"i",
			"'",
			"push_back",
			",",
			"a",
			",",
			"2",
			"a",
			"1",
			"a",
			"1",
			"lut_maker"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "mod_grammar.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3626,
						"regions":
						{
						},
						"selection":
						[
							[
								3333,
								3333
							]
						],
						"settings":
						{
							"syntax": "Packages/XML/XML.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "notes.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 615,
						"regions":
						{
						},
						"selection":
						[
							[
								469,
								469
							]
						],
						"settings":
						{
							"auto_name": "",
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								17,
								20,
								13,
								38,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "parserDef.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2479,
						"regions":
						{
						},
						"selection":
						[
							[
								266,
								266
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								12,
								26,
								23,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "parserUtils.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 925,
						"regions":
						{
						},
						"selection":
						[
							[
								771,
								771
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								0,
								15,
								57,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "set.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 702,
						"regions":
						{
						},
						"selection":
						[
							[
								393,
								393
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								1,
								10,
								2,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "parserSets.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 678,
						"regions":
						{
						},
						"selection":
						[
							[
								670,
								670
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								10,
								26,
								52,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C++.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "parserUtils.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 17943,
						"regions":
						{
						},
						"selection":
						[
							[
								16778,
								16778
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								10,
								25,
								17,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "set.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1281,
						"regions":
						{
						},
						"selection":
						[
							[
								363,
								363
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								0,
								27,
								16,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "parserSets.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2273,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								344
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								10,
								31,
								27,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "run.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 983,
						"regions":
						{
						},
						"selection":
						[
							[
								565,
								565
							]
						],
						"settings":
						{
							"auto_name": "",
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								1,
								54,
								45,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/C++/C.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "makefile",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1111,
						"regions":
						{
						},
						"selection":
						[
							[
								1111,
								1111
							]
						],
						"settings":
						{
							"c_time":
							[
								128,
								3,
								99,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								100,
								97,
								116,
								101,
								116,
								105,
								109,
								101,
								10,
								113,
								0,
								67,
								10,
								7,
								224,
								2,
								18,
								12,
								14,
								10,
								0,
								0,
								0,
								113,
								1,
								133,
								113,
								2,
								82,
								113,
								3,
								46
							],
							"syntax": "Packages/Makefile/Makefile.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 29.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.cc":
	{
		"height": 138.0
	},
	"output.exec":
	{
		"height": 145.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/C++/C++ Single File.sublime-build",
	"project": "compiler.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 327.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 1,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": false,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
